---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# Action test/validation workflow
name: 'Test GitHub Action üß™'

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

permissions: {}

jobs:
  test-issue-detection:
    name: 'Test issue tracker detection'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 10
    steps:
      # Harden the runner used by this workflow
      # yamllint disable-line rule:line-length
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: 'Checkout repository'
        # yamllint disable-line rule:line-length
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: 'Setup test commit with issue tracker'
        run: |
          git config user.name 'GitHub Actions Test'
          git config user.email 'actions@github.com'
          echo '# Test Documentation' > test-detection.md
          git add test-detection.md
          git commit -m "docs: Add test documentation

          This commit includes an issue tracker reference.

          Issue-ID: TEST-456"

      - name: 'Test detection of existing issue tracker'
        uses: ./
        id: test-detection
        with:
          issue_id_lookup_json: >-
            {
              "${{ github.actor }}": "FALLBACK-001",
              "dependabot[bot]": "MAINT-001"
            }
          inject: false

      - name: 'Verify issue tracker was detected'
        run: |
          if [ "${{ steps.test-detection.outputs.present }}" != "true" ]; then
            echo '‚ùå Failed to detect existing issue tracker'
            exit 1
          fi
          echo '‚úÖ Issue tracker detection test passed'

  test-custom-string:
    name: 'Test custom issue string'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 10
    steps:
      # Harden the runner used by this workflow
      # yamllint disable-line rule:line-length
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: 'Checkout repository'
        # yamllint disable-line rule:line-length
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: 'Setup test commit with custom issue format'
        run: |
          git config user.name 'GitHub Actions Test'
          git config user.email 'actions@github.com'
          echo '# Custom Format Test' > test-custom.md
          git add test-custom.md
          git commit -m "feat: Add custom format support

          This commit uses a custom issue tracker format.

          Ticket-ID: CUSTOM-789"

      - name: 'Test custom issue string detection'
        uses: ./
        id: test-custom
        with:
          issue_id_lookup_json: '{"test": "FALLBACK-999"}'
          issue_string: 'Ticket-ID:'
          inject: false

      - name: 'Verify custom string was detected'
        run: |
          if [ "${{ steps.test-custom.outputs.present }}" != "true" ]; then
            echo '‚ùå Failed to detect custom issue string format'
            exit 1
          fi
          echo '‚úÖ Custom issue string test passed'

  test-missing-issue:
    name: 'Test missing issue handling'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 10
    steps:
      # Harden the runner used by this workflow
      # yamllint disable-line rule:line-length
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: 'Checkout repository'
        # yamllint disable-line rule:line-length
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: 'Setup test commit without issue tracker'
        run: |
          git config user.name 'GitHub Actions Test'
          git config user.email 'actions@github.com'
          echo '# No Issue Test' > test-no-issue.md
          git add test-no-issue.md
          git commit -m "fix: Update configuration

          This commit does not include an issue tracker reference."

      - name: 'Test missing issue detection (check mode)'
        uses: ./
        id: test-missing
        with:
          issue_id_lookup_json: >-
            {
              "${{ github.actor }}": "FOUND-123",
              "test-user": "TEST-456"
            }
          inject: false

      - name: 'Verify missing issue was detected'
        run: |
          if [ "${{ steps.test-missing.outputs.present }}" == 'true' ]; then
            echo '‚ùå Should not have found issue tracker'
            exit 1
          fi
          echo '‚úÖ Missing issue detection test passed'

  test-error-handling:
    name: 'Test error scenarios'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 10
    steps:
      # Harden the runner used by this workflow
      # yamllint disable-line rule:line-length
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: 'Checkout repository'
        # yamllint disable-line rule:line-length
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: 'Setup test commit for error testing'
        run: |
          git config user.name 'GitHub Actions Test'
          git config user.email 'actions@github.com'
          echo '# Error Test' > test-error.md
          git add test-error.md
          git commit -m 'test: Error handling scenario'

      - name: 'Test with invalid JSON'
        uses: ./
        id: test-invalid-json
        continue-on-error: true
        with:
          issue_id_lookup_json: 'invalid json format here'
          inject: true

      - name: 'Verify invalid JSON was handled'
        run: |
          if [ "${{ steps.test-invalid-json.outcome }}" == 'success' ]; then
            echo '‚ùå Should have failed with invalid JSON'
            exit 1
          fi
          echo '‚úÖ Invalid JSON handling test passed'

      - name: 'Test successful scenario for comparison'
        uses: ./
        id: test-valid
        with:
          issue_id_lookup_json: '{"valid": "TEST-000"}'
          inject: false

      - name: 'Verify valid input works'
        run: |
          if [ "${{ steps.test-valid.outcome }}" != 'success' ]; then
            echo '‚ùå Valid input should have succeeded'
            exit 1
          fi
          echo '‚úÖ Valid input test passed'
          echo '‚úÖ All error handling tests completed'
